using System.Text;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.Text;

/// <inheritdoc />
[Generator]
public class ReQuestyAppSettingsGenerator : IIncrementalGenerator
{
    private string findFileAndRead(string directory, string name, int maxDepth)
    {
        try
        {
            using StreamReader reader = new(PathHelper.Join(directory, name), Encoding.UTF8);
            return reader.ReadToEnd();
        }
        catch (FileNotFoundException e)
        {
            if (maxDepth > 0)
            {
                return findFileAndRead(PathHelper.Join(directory, ".."), name, maxDepth - 1);
            }
            else
            {
                throw e;
            }
        }
    }

    /// <inheritdoc />
    public void Initialize(IncrementalGeneratorInitializationContext context)
    {
        context.RegisterSourceOutput(context.CompilationProvider, (spc, compilation) =>
        {

            string directory = Path.GetDirectoryName(compilation.SyntaxTrees.First().FilePath);

            string text = findFileAndRead(directory, "appsettings.json", 5);
            byte[] content = Encoding.UTF8.GetBytes(text);
            string bytes = "new byte[] { " + string.Join(", ", content) + "}";

            string source = $@"// <auto-generated/>
namespace ReQuesty.Generated;

/// <summary>
///   The app settings class
/// </summary>
public static class ReQuestyAppSettings
{{
    /// <summary>
    ///   The default app settings
    /// </summary>
    public static byte[] Default()
    {{
        return {bytes};
    }}
}}
";

            // Add the source code to the compilation
            spc.AddSource("ReQuestyAppSettings.g.cs", SourceText.From(source, Encoding.UTF8));
        });
    }
}
